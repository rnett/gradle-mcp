name: CI
run-name: CI
on: [ push, workflow_call ]

permissions:
  contents: write

jobs:
  buildAndTest:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m"
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Java 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Java 24
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 24

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'

      - name: Build library
        run: |
          ./gradlew shadowJar

      - name: Test library
        run: ./gradlew check

      - name: Get version
        id: get-version
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"

  publishSnapshot:
    name: Publish snapshot
    needs: buildAndTest
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_call' && github.ref == 'refs/heads/main' && endsWith(needs.buildAndTest.outputs.version, '-SNAPSHOT') }}
    env:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m"
    steps:
      - uses: actions/checkout@v5
      - name: Setup Java 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Java 24
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 24

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'

      - name: Publish to Maven staging
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
        run: ./gradlew :publishToMavenCentral --no-configuration-cache

  publichSnapshotDocs:
    name: Publish docs
    needs: publishSnapshot
    uses: ./.github/workflows/docs.yaml
    secrets: inherit
    permissions:
      contents: write
